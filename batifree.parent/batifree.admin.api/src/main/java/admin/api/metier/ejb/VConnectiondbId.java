package admin.api.metier.ejb;

// Generated 9 aoï¿½t 2013 22:29:28 by Hibernate Tools 4.0.0

import javax.persistence.Column;
import javax.persistence.Embeddable;

/**
 * VConnectiondbId generated by hbm2java
 */
@Embeddable
@SuppressWarnings("serial")
public class VConnectiondbId implements java.io.Serializable {

	private int id;
	private String driver;
	private String url;
	private String dialect;
	private Integer limitUserAlert;
	private String rootLogin;
	private String rootPassword;
	private String rootDbname;
	private Boolean enabled;
	private Long userRestant;

	public VConnectiondbId() {
	}

	public VConnectiondbId(int id) {
		this.id = id;
	}

	public VConnectiondbId(int id, String driver, String url, String dialect, Integer limitUserAlert, String rootLogin, String rootPassword,
			String rootDbname, Boolean enabled, Long userRestant) {
		this.id = id;
		this.driver = driver;
		this.url = url;
		this.dialect = dialect;
		this.limitUserAlert = limitUserAlert;
		this.rootLogin = rootLogin;
		this.rootPassword = rootPassword;
		this.rootDbname = rootDbname;
		this.enabled = enabled;
		this.userRestant = userRestant;
	}

	@Column(name = "CON_ID", nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@Column(name = "CON_DRIVER", length = 65535)
	public String getDriver() {
		return this.driver;
	}

	public void setDriver(String driver) {
		this.driver = driver;
	}

	@Column(name = "CON_URL", length = 65535)
	public String getUrl() {
		return this.url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	@Column(name = "CON_DIALECT", length = 65535)
	public String getDialect() {
		return this.dialect;
	}

	public void setDialect(String dialect) {
		this.dialect = dialect;
	}

	@Column(name = "CON_LIMIT_USER_ALERT")
	public Integer getLimitUserAlert() {
		return this.limitUserAlert;
	}

	public void setLimitUserAlert(Integer limitUserAlert) {
		this.limitUserAlert = limitUserAlert;
	}

	@Column(name = "CON_ROOT_LOGIN", length = 65535)
	public String getRootLogin() {
		return this.rootLogin;
	}

	public void setRootLogin(String rootLogin) {
		this.rootLogin = rootLogin;
	}

	@Column(name = "CON_ROOT_PASSWORD", length = 65535)
	public String getRootPassword() {
		return this.rootPassword;
	}

	public void setRootPassword(String rootPassword) {
		this.rootPassword = rootPassword;
	}

	@Column(name = "CON_ROOT_DBNAME", length = 65535)
	public String getRootDbname() {
		return this.rootDbname;
	}

	public void setRootDbname(String rootDbname) {
		this.rootDbname = rootDbname;
	}

	@Column(name = "CON_ENABLED")
	public Boolean getEnabled() {
		return this.enabled;
	}

	public void setEnabled(Boolean enabled) {
		this.enabled = enabled;
	}

	@Column(name = "NB_USER_RESTANT")
	public Long getUserRestant() {
		return this.userRestant;
	}

	public void setUserRestant(Long userRestant) {
		this.userRestant = userRestant;
	}

	@Override
	public boolean equals(Object other) {
		if ((this == other)) {
			return true;
		}
		if ((other == null)) {
			return false;
		}
		if (!(other instanceof VConnectiondbId)) {
			return false;
		}
		VConnectiondbId castOther = (VConnectiondbId) other;

		return (this.getId() == castOther.getId())
				&& ((this.getDriver() == castOther.getDriver()) || (this.getDriver() != null && castOther.getDriver() != null && this.getDriver()
				.equals(castOther.getDriver())))
				&& ((this.getUrl() == castOther.getUrl()) || (this.getUrl() != null && castOther.getUrl() != null && this.getUrl().equals(
						castOther.getUrl())))
						&& ((this.getDialect() == castOther.getDialect()) || (this.getDialect() != null && castOther.getDialect() != null && this
						.getDialect().equals(castOther.getDialect())))
						&& ((this.getLimitUserAlert() == castOther.getLimitUserAlert()) || (this.getLimitUserAlert() != null
						&& castOther.getLimitUserAlert() != null && this.getLimitUserAlert().equals(castOther.getLimitUserAlert())))
						&& ((this.getRootLogin() == castOther.getRootLogin()) || (this.getRootLogin() != null && castOther.getRootLogin() != null && this
						.getRootLogin().equals(castOther.getRootLogin())))
						&& ((this.getRootPassword() == castOther.getRootPassword()) || (this.getRootPassword() != null
		                && castOther.getRootPassword() != null && this.getRootPassword().equals(castOther.getRootPassword())))
						&& ((this.getRootDbname() == castOther.getRootDbname()) || (this.getRootDbname() != null && castOther.getRootDbname() != null && this
						.getRootDbname().equals(castOther.getRootDbname())))
						&& ((this.getEnabled() == castOther.getEnabled()) || (this.getEnabled() != null && castOther.getEnabled() != null && this
						.getEnabled().equals(castOther.getEnabled())))
						&& ((this.getUserRestant() == castOther.getUserRestant()) || (this.getUserRestant() != null && castOther.getUserRestant() != null && this
						.getUserRestant().equals(castOther.getUserRestant())));
	}

	@Override
	public int hashCode() {
		int result = 17;

		result = 37 * result + this.getId();
		result = 37 * result + (getDriver() == null ? 0 : this.getDriver().hashCode());
		result = 37 * result + (getUrl() == null ? 0 : this.getUrl().hashCode());
		result = 37 * result + (getDialect() == null ? 0 : this.getDialect().hashCode());
		result = 37 * result + (getLimitUserAlert() == null ? 0 : this.getLimitUserAlert().hashCode());
		result = 37 * result + (getRootLogin() == null ? 0 : this.getRootLogin().hashCode());
		result = 37 * result + (getRootPassword() == null ? 0 : this.getRootPassword().hashCode());
		result = 37 * result + (getRootDbname() == null ? 0 : this.getRootDbname().hashCode());
		result = 37 * result + (getEnabled() == null ? 0 : this.getEnabled().hashCode());
		result = 37 * result + (getUserRestant() == null ? 0 : this.getUserRestant().hashCode());
		return result;
	}

}
