package webbati.api.metier.ejb;

// Generated 4 avr. 2014 20:19:57 by Hibernate Tools 4.0.0

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Affaire generated by hbm2java
 */
@Entity
@Table(name = "AFFAIRE")
@Inheritance(strategy = InheritanceType.JOINED)
@SuppressWarnings("serial")
public class Affaire implements java.io.Serializable {

	private Integer id;
	private Client client;
	private Integer clientId;
	private Binaire binaireByBinConclusion;
	private Integer binaireByBinConclusionId;
	private Binaire binaireByBinDescriptif;
	private Integer binaireByBinDescriptifId;
	private Binaire binaireByBinIntroduction;
	private Integer binaireByBinIntroductionId;
	private Binaire binaireByBinNotes;
	private Integer binaireByBinNotesId;
	private Etat etat;
	private Integer etatId;
	private Binaire binaireByBinMetre;
	private Integer binaireByBinMetreId;
	private Chantier chantier;
	private Integer chantierId;
	private String code;
	private String reference;
	private Date dateCreation;
	private Date dateMaj;
	private Boolean termine;
	private Boolean valide;
	private Date dureeValidite;
	private Date dateDebTravaux;
	private Date dateFinTravaux;
	private Date dateCloture;
	private Set<Etude> etudes = new HashSet<Etude>(0);
	private Set<Echeancier> echeanciers = new HashSet<Echeancier>(0);

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "AFF_ID", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CNT_ID", insertable = false, updatable = false)
	public Client getClient() {
		return this.client;
	}

	public void setClient(Client client) {
		this.client = client;
	}

	@Column(name = "CNT_ID")
	public Integer getClientId() {
		return this.clientId;
	}

	public void setClientId(Integer clientId) {
		this.clientId = clientId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "BIN_CONCLUSION", insertable = false, updatable = false)
	public Binaire getBinaireByBinConclusion() {
		return this.binaireByBinConclusion;
	}

	public void setBinaireByBinConclusion(Binaire binaireByBinConclusion) {
		this.binaireByBinConclusion = binaireByBinConclusion;
	}

	@Column(name = "BIN_CONCLUSION")
	public Integer getConclusionId() {
		return this.binaireByBinConclusionId;
	}

	public void setConclusionId(Integer binaireByBinConclusionId) {
		this.binaireByBinConclusionId = binaireByBinConclusionId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "BIN_DESCRIPTIF", insertable = false, updatable = false)
	public Binaire getBinaireByBinDescriptif() {
		return this.binaireByBinDescriptif;
	}

	public void setBinaireByBinDescriptif(Binaire binaireByBinDescriptif) {
		this.binaireByBinDescriptif = binaireByBinDescriptif;
	}

	@Column(name = "BIN_DESCRIPTIF")
	public Integer getDescriptifId() {
		return this.binaireByBinDescriptifId;
	}

	public void setDescriptifId(Integer binaireByBinDescriptifId) {
		this.binaireByBinDescriptifId = binaireByBinDescriptifId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "BIN_INTRODUCTION", insertable = false, updatable = false)
	public Binaire getBinaireByBinIntroduction() {
		return this.binaireByBinIntroduction;
	}

	public void setBinaireByBinIntroduction(Binaire binaireByBinIntroduction) {
		this.binaireByBinIntroduction = binaireByBinIntroduction;
	}

	@Column(name = "BIN_INTRODUCTION")
	public Integer getIntroductionId() {
		return this.binaireByBinIntroductionId;
	}

	public void setIntroductionId(Integer binaireByBinIntroductionId) {
		this.binaireByBinIntroductionId = binaireByBinIntroductionId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "BIN_NOTES", insertable = false, updatable = false)
	public Binaire getBinaireByBinNotes() {
		return this.binaireByBinNotes;
	}

	public void setBinaireByBinNotes(Binaire binaireByBinNotes) {
		this.binaireByBinNotes = binaireByBinNotes;
	}

	@Column(name = "BIN_NOTES")
	public Integer getNotesId() {
		return this.binaireByBinNotesId;
	}

	public void setNotesId(Integer binaireByBinNotesId) {
		this.binaireByBinNotesId = binaireByBinNotesId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ETA_ID", nullable = false, insertable = false, updatable = false)
	public Etat getEtat() {
		return this.etat;
	}

	public void setEtat(Etat etat) {
		this.etat = etat;
	}

	@Column(name = "ETA_ID", nullable = false)
	public Integer getEtatId() {
		return this.etatId;
	}

	public void setEtatId(Integer etatId) {
		this.etatId = etatId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "BIN_METRE", insertable = false, updatable = false)
	public Binaire getBinaireByBinMetre() {
		return this.binaireByBinMetre;
	}

	public void setBinaireByBinMetre(Binaire binaireByBinMetre) {
		this.binaireByBinMetre = binaireByBinMetre;
	}

	@Column(name = "BIN_METRE")
	public Integer getMetreId() {
		return this.binaireByBinMetreId;
	}

	public void setMetreId(Integer binaireByBinMetreId) {
		this.binaireByBinMetreId = binaireByBinMetreId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CHT_ID", insertable = false, updatable = false)
	public Chantier getChantier() {
		return this.chantier;
	}

	public void setChantier(Chantier chantier) {
		this.chantier = chantier;
	}

	@Column(name = "CHT_ID")
	public Integer getChantierId() {
		return this.chantierId;
	}

	public void setChantierId(Integer chantierId) {
		this.chantierId = chantierId;
	}

	@Column(name = "AFF_CODE", length = 30)
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Column(name = "AFF_REFERENCE", length = 40)
	public String getReference() {
		return this.reference;
	}

	public void setReference(String reference) {
		this.reference = reference;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "AFF_DATE_CREATION", length = 19)
	public Date getDateCreation() {
		return this.dateCreation;
	}

	public void setDateCreation(Date dateCreation) {
		this.dateCreation = dateCreation;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "AFF_DATE_MAJ", length = 19)
	public Date getDateMaj() {
		return this.dateMaj;
	}

	public void setDateMaj(Date dateMaj) {
		this.dateMaj = dateMaj;
	}

	@Column(name = "AFF_TERMINE")
	public Boolean getTermine() {
		return this.termine;
	}

	public void setTermine(Boolean termine) {
		this.termine = termine;
	}

	@Column(name = "AFF_VALIDE")
	public Boolean getValide() {
		return this.valide;
	}

	public void setValide(Boolean valide) {
		this.valide = valide;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "AFF_DUREE_VALIDITE", length = 19)
	public Date getDureeValidite() {
		return this.dureeValidite;
	}

	public void setDureeValidite(Date dureeValidite) {
		this.dureeValidite = dureeValidite;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "AFF_DATE_DEB_TRAVAUX", length = 19)
	public Date getDateDebTravaux() {
		return this.dateDebTravaux;
	}

	public void setDateDebTravaux(Date dateDebTravaux) {
		this.dateDebTravaux = dateDebTravaux;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "AFF_DATE_FIN_TRAVAUX", length = 19)
	public Date getDateFinTravaux() {
		return this.dateFinTravaux;
	}

	public void setDateFinTravaux(Date dateFinTravaux) {
		this.dateFinTravaux = dateFinTravaux;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "AFF_DATE_CLOTURE", length = 19)
	public Date getDateCloture() {
		return this.dateCloture;
	}

	public void setDateCloture(Date dateCloture) {
		this.dateCloture = dateCloture;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "affaire")
	public Set<Etude> getEtudes() {
		return this.etudes;
	}

	public void setEtudes(Set<Etude> etudes) {
		this.etudes = etudes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "affaire")
	public Set<Echeancier> getEcheanciers() {
		return this.echeanciers;
	}

	public void setEcheanciers(Set<Echeancier> echeanciers) {
		this.echeanciers = echeanciers;
	}
}
