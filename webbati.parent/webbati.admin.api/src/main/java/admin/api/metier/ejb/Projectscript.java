package admin.api.metier.ejb;

// Generated 9 aoï¿½t 2013 22:29:28 by Hibernate Tools 4.0.0

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Projectscript generated by hbm2java
 */
@Entity
@Table(name = "PROJECTSCRIPT")
@SuppressWarnings("serial")
public class Projectscript implements java.io.Serializable {

	private Integer id;
	private Project project;
	private Integer projectId;
	private String fileName;
	private Set<Userproject> userprojects = new HashSet<Userproject>(0);

	public Projectscript() {
	}

	public Projectscript(Project project) {
		this.project = project;
	}

	public Projectscript(Project project, String fileName, Set<Userproject> userprojects) {
		this.project = project;
		this.fileName = fileName;
		this.userprojects = userprojects;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "PSR_ID", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PRO_ID", nullable = false, insertable = false, updatable = false)
	public Project getProject() {
		return this.project;
	}

	public void setProject(Project project) {
		this.project = project;
	}

	@Column(name = "PRO_ID", nullable = false)
	public Integer getProjectId() {
		return projectId;
	}

	public void setProjectId(Integer pProjectId) {
		projectId = pProjectId;
	}

	@Column(name = "PSR_FILE_NAME", length = 65535)
	public String getFileName() {
		return this.fileName;
	}

	public void setFileName(String fileName) {
		this.fileName = fileName;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "projectscript")
	public Set<Userproject> getUserprojects() {
		return this.userprojects;
	}

	public void setUserprojects(Set<Userproject> userprojects) {
		this.userprojects = userprojects;
	}

}
