package admin.api.metier.ejb;

// Generated 9 aoï¿½t 2013 22:29:28 by Hibernate Tools 4.0.0

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Project generated by hbm2java
 */
@Entity
@Table(name = "PROJECT")
@SuppressWarnings("serial")
public class Project implements java.io.Serializable {

	private Integer id;
	private String name;
	private String code;
	private Set<Role> roles = new HashSet<Role>(0);
	private Set<Userproject> userprojects = new HashSet<Userproject>(0);
	private Set<Projectscript> projectscripts = new HashSet<Projectscript>(0);

	public Project() {
	}

	public Project(String name, String code, Set<Role> roles, Set<Userproject> userprojects, Set<Projectscript> projectscripts) {
		this.name = name;
		this.code = code;
		this.roles = roles;
		this.userprojects = userprojects;
		this.projectscripts = projectscripts;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "PRO_ID", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "PRO_NAME", length = 65535)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "PRO_CODE", length = 65535)
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "project")
	public Set<Role> getRoles() {
		return this.roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "project")
	public Set<Userproject> getUserprojects() {
		return this.userprojects;
	}

	public void setUserprojects(Set<Userproject> userprojects) {
		this.userprojects = userprojects;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "project")
	public Set<Projectscript> getProjectscripts() {
		return this.projectscripts;
	}

	public void setProjectscripts(Set<Projectscript> projectscripts) {
		this.projectscripts = projectscripts;
	}

}
